import { NextApiRequest, NextApiResponse } from 'next';
import { testVisionConnection } from '../../../lib/google-vision';

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  // Only allow GET requests
  if (req.method !== 'GET') {
    return res.status(405).json({ 
      success: false, 
      error: 'Method not allowed. Use GET.' 
    });
  }

  try {
    console.log('üîç Testing Google Cloud Vision API connection...');
    
    // Test the connection
    const isConnected = await testVisionConnection();
    
    if (isConnected) {
      return res.status(200).json({
        success: true,
        message: 'Google Cloud Vision API connection successful',
        timestamp: new Date().toISOString(),
        projectId: process.env.GOOGLE_CLOUD_PROJECT_ID,
        clientEmail: process.env.GOOGLE_CLOUD_CLIENT_EMAIL
      });
    } else {
      return res.status(500).json({
        success: false,
        error: 'Google Cloud Vision API connection failed',
        timestamp: new Date().toISOString()
      });
    }
  } catch (error) {
    console.error('‚ùå Connection test error:', error);
    
    return res.status(500).json({
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error occurred',
      timestamp: new Date().toISOString()
    });
  }
}
